import React from "react";
import { useTranslate } from "react-polyglot";
import Collateral from "./components/Collateral";
import Psm from "./components/Psm";
import HistoricalDebtChart from "./components/HistoricalDebtChart";
import Pip from "./components/Pip";
import CollateralChart from "./components/CollateralChart";
import Clip from "./components/Clip";
import Vest from "./components/Vest";
import { Tab, Tabs, TabList, TabPanel } from "react-tabs";
import "react-tabs/style/react-tabs.css";
import { useLocation, useHistory } from "react-router-dom";

const formatAmount = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 0,
  maximumFractionDigits: 2,
});

const formatNoDecimals = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 0,
  maximumFractionDigits: 0,
});

const formatCurrency = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 2,
  maximumFractionDigits: 4,
});

const formatTwoDp = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 2,
  maximumFractionDigits: 2,
});

const formatPercent = new Intl.NumberFormat("en-US", {
  style: "percent",
  minimumFractionDigits: 2,
  maximumFractionDigits: 2,
});

const formatFiveDp = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 5,
  maximumFractionDigits: 5,
});

const formatSixDp = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 6,
  maximumFractionDigits: 6,
});

const formatEightDp = new Intl.NumberFormat("en-US", {
  style: "decimal",
  minimumFractionDigits: 8,
  maximumFractionDigits: 8,
});

const Main = (props) => {
  const t = useTranslate();
  document.title = `${formatNoDecimals.format(props.debt)} - Dai Stats`;
  const sysCollat = props.sysLocked / props.debt;

  const nextFlap = () =>
    formatAmount.format(
      Number(props.surplusBuffer) +
        Number(props.surplusBump) -
        Number(props.sysSurplus)
    );

  // hack till Main component is broken into component per section
  const location = useLocation();
  const history = useHistory();
  const indexToTab = [
    "/overview",
    "/collateral",
    "/oracles",
    "/auctions",
    "/ecosystem",
    "/addresses",
    "/vesting",
  ];
  function tabNameToIndex() {
    let i = indexToTab.indexOf(location.pathname);
    return i >= 0 ? i : 0;
  }

  return (
    <div>
      <div className="container">
        <Tabs
          defaultIndex={tabNameToIndex()}
          onSelect={(index) => history.push(indexToTab[index])}
        >
          <TabList>
            <Tab>
              <p className="is-size-5">Overview</p>
            </Tab>
            <Tab>
              <p className="is-size-5">Collateral</p>
            </Tab>
            <Tab>
              <p className="is-size-5">Oracles</p>
            </Tab>
            <Tab>
              <p className="is-size-5">Auctions</p>
            </Tab>
            <Tab>
              <p className="is-size-5">Ecosystem</p>
            </Tab>
          </TabList>

          <TabPanel>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.debt}>
                    {props.debt >= 420000000 && props.debt < 421000000 && (
                      <span role="img" aria-label="Tree">
                        ðŸŒ²
                      </span>
                    )}{" "}
                    {formatAmount.format(props.debt)} /{" "}
                    {formatAmount.format(props.Line)}
                  </h3>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <CollateralChart
                    ilks={props.ilks}
                    debt={props.sysLocked}
                    useValue={true}
                  />
                  <h4 className="subtitle is-size-4">Dai Collateralization</h4>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <CollateralChart
                    ilks={props.ilks}
                    debt={props.debt}
                    groupBy={true}
                  />
                  <h4 className="subtitle is-size-4">
                    Dai Generated by Collateral
                  </h4>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.sysLocked}>
                    ${formatAmount.format(props.sysLocked)}
                  </h3>
                  <h4 className="subtitle is-size-4">
                    {t("daistats.total_locked")}
                  </h4>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={sysCollat}>
                    {formatPercent.format(sysCollat)}
                  </h3>
                  <h4 className="title subtitle is-size-4">
                    {t("daistats.collat_ratio")}
                  </h4>
                </div>
              </div>
            </div>
          </TabPanel>
          <TabPanel>
            <Tabs>
              <TabList>
                <Tab>
                  <p className="is-size-5">ERC-20</p>
                </Tab>
              </TabList>

              <TabPanel>
                <Collateral {...props} ilk="XDC-A" />
                <Collateral {...props} ilk="XDC-B" />
                <Collateral {...props} ilk="XDC-C" />
              </TabPanel>
            </Tabs>
          </TabPanel>
          <TabPanel>
            <div className="columns">
              <Pip {...props} token="XDC" ilk="XDC-A" formater={formatFiveDp} />
            </div>
          </TabPanel>
          <TabPanel>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.flapKicks}>
                    {formatAmount.format(props.flapKicks)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.dai_surplus_auctions")}
                  </p>
                  <p className="subtitle is-size-6">
                    {t("daistats.till_next_flap")}: {nextFlap()}
                  </p>
                  <p className="title subtitle is-size-6">
                    Beg: {formatPercent.format(props.flapBeg - 1)} Ttl:{" "}
                    {props.flapTtl / 60}m Tau: {props.flapTau / 60 / 60}h
                  </p>
                  <p
                    className="title subtitle is-size-6"
                    title={props.surplusBump}
                  >
                    {t("daistats.lot")}:{" "}
                    {formatAmount.format(props.surplusBump)}
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.cdps}>
                    {props.cdps}
                  </h3>
                  <p className="subtitle is-size-4">
                    {t("daistats.vaults_opened")}
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.mkrSupply}>
                    {formatAmount.format(props.mkrSupply)}
                  </h3>
                  <p className="subtitle is-size-4">
                    {t("daistats.token_supply", { token: "MKR" })}
                  </p>
                  <a
                    href={`https://etherscan.io/address/${props.MCD_PAUSE_PROXY}`}
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    <p
                      className="subtitle is-size-6"
                      title={props.protocolTreasury}
                    >
                      Protocol Treasury:{" "}
                      {formatAmount.format(props.protocolTreasury)} MKR
                    </p>
                  </a>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.flopKicks}>
                    {formatAmount.format(props.flopKicks)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.debt_flop_auctions")}
                  </p>
                  <p className="title subtitle is-size-6">
                    {t("daistats.initial_lot_size")}:{" "}
                    {formatAmount.format(props.debtDump)} MKR
                  </p>
                  <p className="title subtitle is-size-6">
                    {t("daistats.initial_price")}: $
                    {formatAmount.format(props.debtSize / props.debtDump)}
                  </p>
                  <p className="title subtitle is-size-6">
                    Beg: {formatPercent.format(props.flopBeg - 1)} Pad:{" "}
                    {formatPercent.format(props.flopPad - 1)}
                  </p>
                  <p className="title subtitle is-size-6">
                    Ttl: {props.flopTtl / 60}m Tau: {props.flopTau / 60 / 60}h
                  </p>
                  <p className="title subtitle is-size-6">
                    Flop delay: {props.flopDelay / 60 / 60}h
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3
                    className="title"
                    title={Math.min(props.vow_dai, props.sysDebt)}
                  >
                    {formatAmount.format(
                      Math.min(props.vow_dai, props.sysDebt)
                    )}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.debt_available_heal")}
                  </p>
                  <p className="title subtitle is-size-6">
                    {t("daistats.debt_buffer")}:{" "}
                    {formatAmount.format(props.debtSize)}
                  </p>
                  {/*<p className="title subtitle is-size-6" title={props.vice}>Total Unbacked Dai (vice): {formatAmount.format(props.vice)}</p>*/}
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.sysSurplus}>
                    {formatAmount.format(props.sysSurplus)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.system_surplus")}
                  </p>
                  <p
                    className="title subtitle is-size-6"
                    title={props.surplusBuffer}
                  >
                    {t("daistats.surplus_buffer")}:{" "}
                    {formatAmount.format(props.surplusBuffer)}
                  </p>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.dirt}>
                    {formatAmount.format(props.dirt)}
                  </h3>
                  <p
                    className="title subtitle is-size-4"
                    title="Aggregate Dai collection target of all active auctions across all collateral types"
                  >
                    {/*t('daistats.Dirt')*/}Total Unbacked Dai including
                    Penalties (Dirt)
                  </p>
                  <p className="subtitle is-size-6" title={props.hole}>
                    {/*t('daistats.Hole')*/}Global Limit (Hole){" "}
                    {formatAmount.format(props.hole)}
                  </p>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column table-container">
                <table
                  className="table is-narrow"
                  style={{ backgroundColor: "#192734", color: "#e6e8f1" }}
                >
                  <Clip heading={true} />
                  <tbody>
                    <Clip {...props} token="XDC-A" ilk="XDC-A" />
                    <Clip {...props} token="XDC-B" ilk="XDC-B" />
                    <Clip {...props} token="XDC-C" ilk="XDC-C" />
                  </tbody>
                </table>
              </div>
            </div>
          </TabPanel>
          <TabPanel>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.pauseDelay}>
                    {props.pauseDelay / 60 / 60}h
                  </h3>
                  <p className="title subtitle is-size-4">
                    {/*t('daistats.gsm_pause_delay')*/}GSM Pause Delay
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.flashLine}>
                    {formatAmount.format(props.flashLine)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {/*t('daistats.flash_loan_limit')*/}Dai Flash Loan Limit
                  </p>
                  <p className="subtitle is-size-6">
                    {/*t('daistats.fee')}*/}Fee:{" "}
                    {formatPercent.format(props.flashToll)}
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.esmMin}>
                    {formatAmount.format(props.esmMin)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {/*t('daistats.esm_threshold')*/}ESM Threshold
                  </p>
                  <p className="subtitle is-size-6" title={props.esmSum}>
                    {/*t('daistats.total_MKR_burned')}*/}Total MKR Burned:{" "}
                    {formatSixDp.format(props.esmSum)}
                  </p>
                  <p className="title subtitle is-size-6" title={props.endWait}>
                    {/*t('daistats.end_wait')}*/}ESM Delay:{" "}
                    {props.endWait / 60 / 60}h
                  </p>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.daiSupply}>
                    {formatAmount.format(props.daiSupply)}
                  </h3>
                  <p className="subtitle is-size-4">
                    {t("daistats.token_supply", { token: "Dai (ERC20)" })} (
                    {formatAmount.format((props.daiSupply / props.debt) * 100)}
                    %)
                  </p>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.savingsDai}>
                    {formatAmount.format(props.savingsDai)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.dai_in_dsr")}(
                    {formatAmount.format((props.savingsDai / props.debt) * 100)}
                    %)
                  </p>
                  <p className="subtitle is-size-6">
                    ({t("daistats.pie_in_dsr")}:{" "}
                    {formatAmount.format(props.savingsPie)})
                  </p>
                </div>
              </div>

              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.potFee}>
                    {formatPercent.format(props.potFee)}
                  </h3>
                  <p className="title subtitle is-size-4">
                    {t("daistats.dai_savings_rate")}
                  </p>
                  <p className="subtitle is-size-6">
                    {t("daistats.last_drip")}: {props.potDrip}
                  </p>
                </div>
              </div>
            </div>
          </TabPanel>
        </Tabs>
      </div>
    </div>
  );
};

export default Main;
