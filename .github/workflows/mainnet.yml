name: CI Mainnet

on:
  push:
    branches:
      - mainnet
  workflow_dispatch:

env:
  AWS_DEFAULT_REGION: ap-south-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  REACT_APP_JSON_RPC_URL: https://rpc.xinfin.yodaplus.net
  REACT_APP_NETWORK: "mainnet"
  NODE_ENV: "production"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: |
            /tmp/.buildx-cache-nginx
          key: ${{ runner.os }}-tokenization-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tokenization-buildx-

      - name: ECR docker login
        run:
          aws ecr get-login-password | docker login --username AWS --password-stdin
          135135176603.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build Nginx proxy
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            REACT_APP_JSON_RPC_URL=${{ env.REACT_APP_JSON_RPC_URL }}
            REACT_APP_NETWORK=${{ env.REACT_APP_NETWORK }}
          file: docker/nginx/Dockerfile
          push: true
          tags: 135135176603.dkr.ecr.ap-south-1.amazonaws.com/usxd-stats:mainnet
          cache-from: type=local,src=/tmp/.buildx-cache-nginx
          cache-to: type=local,dest=/tmp/.buildx-cache-nginx-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-nginx
          mv /tmp/.buildx-cache-nginx-new /tmp/.buildx-cache-nginx

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Install docker compose
        run: curl -L
          https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh
          | sh
      - name: Create ECS context
        run: docker context create ecs yodaplus --from-env
      - name: Use ECS context
        run: docker context use yodaplus
      - name: ECR docker login
        run:
          aws ecr get-login-password | docker login --username AWS --password-stdin
          135135176603.dkr.ecr.ap-south-1.amazonaws.com
      - name: Deploy to ECS
        run: >
          docker compose -f infra/docker-compose.base.yml -f infra/docker-compose.tags-mainnet.yml -f
          infra/docker-compose.ecs.yml -f infra/docker-compose.ecs-mainnet.yml --project-name
          usxd-stats-mainnet --project-directory ./ up || true
